"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[920],{94920:(t,e,n)=>{n.d(e,{secp256k1:()=>_});var r=n(34143),o=n(30213),i=n(55470);class s extends i.Vw{constructor(t,e){super(),this.finished=!1,this.destroyed=!1,(0,o.tW)(t);const n=(0,i.ZJ)(e);if(this.iHash=t.create(),"function"!=typeof this.iHash.update)throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const r=this.blockLen,s=new Uint8Array(r);s.set(n.length>r?t.create().update(n).digest():n);for(let t=0;t<s.length;t++)s[t]^=54;this.iHash.update(s),this.oHash=t.create();for(let t=0;t<s.length;t++)s[t]^=106;this.oHash.update(s),s.fill(0)}update(t){return(0,o.t2)(this),this.iHash.update(t),this}digestInto(t){(0,o.t2)(this),(0,o.ee)(t,this.outputLen),this.finished=!0,this.iHash.digestInto(t),this.oHash.update(t),this.oHash.digestInto(t),this.destroy()}digest(){const t=new Uint8Array(this.oHash.outputLen);return this.digestInto(t),t}_cloneInto(t){t||(t=Object.create(Object.getPrototypeOf(this),{}));const{oHash:e,iHash:n,finished:r,destroyed:o,blockLen:i,outputLen:s}=this;return t.finished=r,t.destroyed=o,t.blockLen=i,t.outputLen=s,t.oHash=e._cloneInto(t.oHash),t.iHash=n._cloneInto(t.iHash),t}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const a=(t,e,n)=>new s(t,e).update(n).digest();a.create=(t,e)=>new s(t,e);var f=n(79716);const u=BigInt(0),c=BigInt(1),l=BigInt(2),d=BigInt(3),h=BigInt(4),w=BigInt(5),g=BigInt(8);BigInt(9),BigInt(16);function p(t,e){const n=t%e;return n>=u?n:e+n}function y(t,e,n){if(n<=u||e<u)throw new Error("Expected power/modulo > 0");if(n===c)return u;let r=c;for(;e>u;)e&c&&(r=r*t%n),t=t*t%n,e>>=c;return r}function m(t,e,n){let r=t;for(;e-- >u;)r*=r,r%=n;return r}function E(t,e){if(t===u||e<=u)throw new Error(`invert: expected positive integers, got n=${t} mod=${e}`);let n=p(t,e),r=e,o=u,i=c,s=c,a=u;for(;n!==u;){const t=r/n,e=r%n,f=o-s*t,u=i-a*t;r=n,n=e,o=s,i=a,s=f,a=u}if(r!==c)throw new Error("invert: does not exist");return p(o,e)}function b(t){if(t%h===d){const e=(t+c)/h;return function(t,n){const r=t.pow(n,e);if(!t.eql(t.sqr(r),n))throw new Error("Cannot find square root");return r}}if(t%g===w){const e=(t-w)/g;return function(t,n){const r=t.mul(n,l),o=t.pow(r,e),i=t.mul(n,o),s=t.mul(t.mul(i,l),o),a=t.mul(i,t.sub(s,t.ONE));if(!t.eql(t.sqr(a),n))throw new Error("Cannot find square root");return a}}return function(t){const e=(t-c)/l;let n,r,o;for(n=t-c,r=0;n%l===u;n/=l,r++);for(o=l;o<t&&y(o,e,t)!==t-c;o++);if(1===r){const e=(t+c)/h;return function(t,n){const r=t.pow(n,e);if(!t.eql(t.sqr(r),n))throw new Error("Cannot find square root");return r}}const i=(n+c)/l;return function(t,s){if(t.pow(s,e)===t.neg(t.ONE))throw new Error("Cannot find square root");let a=r,f=t.pow(t.mul(t.ONE,o),n),u=t.pow(s,i),l=t.pow(s,n);for(;!t.eql(l,t.ONE);){if(t.eql(l,t.ZERO))return t.ZERO;let e=1;for(let n=t.sqr(l);e<a&&!t.eql(n,t.ONE);e++)n=t.sqr(n);const n=t.pow(f,c<<BigInt(a-e-1));f=t.sqr(n),u=t.mul(u,n),l=t.mul(l,f),a=e}return u}}(t)}const B=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function v(t,e){const n=void 0!==e?e:t.toString(2).length;return{nBitLength:n,nByteLength:Math.ceil(n/8)}}function S(t,e,n=!1,r={}){if(t<=u)throw new Error(`Expected Field ORDER > 0, got ${t}`);const{nBitLength:o,nByteLength:i}=v(t,e);if(i>2048)throw new Error("Field lengths over 2048 bytes are not supported");const s=b(t),a=Object.freeze({ORDER:t,BITS:o,BYTES:i,MASK:(0,f.OG)(o),ZERO:u,ONE:c,create:e=>p(e,t),isValid:e=>{if("bigint"!=typeof e)throw new Error("Invalid field element: expected bigint, got "+typeof e);return u<=e&&e<t},is0:t=>t===u,isOdd:t=>(t&c)===c,neg:e=>p(-e,t),eql:(t,e)=>t===e,sqr:e=>p(e*e,t),add:(e,n)=>p(e+n,t),sub:(e,n)=>p(e-n,t),mul:(e,n)=>p(e*n,t),pow:(t,e)=>function(t,e,n){if(n<u)throw new Error("Expected power > 0");if(n===u)return t.ONE;if(n===c)return e;let r=t.ONE,o=e;for(;n>u;)n&c&&(r=t.mul(r,o)),o=t.sqr(o),n>>=c;return r}(a,t,e),div:(e,n)=>p(e*E(n,t),t),sqrN:t=>t*t,addN:(t,e)=>t+e,subN:(t,e)=>t-e,mulN:(t,e)=>t*e,inv:e=>E(e,t),sqrt:r.sqrt||(t=>s(a,t)),invertBatch:t=>function(t,e){const n=new Array(e.length),r=e.reduce(((e,r,o)=>t.is0(r)?e:(n[o]=e,t.mul(e,r))),t.ONE),o=t.inv(r);return e.reduceRight(((e,r,o)=>t.is0(r)?e:(n[o]=t.mul(e,n[o]),t.mul(e,r))),o),n}(a,t),cmov:(t,e,n)=>n?e:t,toBytes:t=>n?(0,f.z)(t,i):(0,f.lq)(t,i),fromBytes:t=>{if(t.length!==i)throw new Error(`Fp.fromBytes: expected ${i}, got ${t.length}`);return n?(0,f.lX)(t):(0,f.Ph)(t)}});return Object.freeze(a)}function x(t){if("bigint"!=typeof t)throw new Error("field order must be bigint");const e=t.toString(2).length;return Math.ceil(e/8)}function I(t){const e=x(t);return e+Math.ceil(e/2)}const q=BigInt(0),O=BigInt(1),R=new WeakMap,A=new WeakMap;function z(t){return function(t){const e=B.reduce(((t,e)=>(t[e]="function",t)),{ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"});(0,f.Q5)(t,e)}(t.Fp),(0,f.Q5)(t,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...v(t.n,t.nBitLength),...t,p:t.Fp.ORDER})}function N(t){void 0!==t.lowS&&(0,f.e8)("lowS",t.lowS),void 0!==t.prehash&&(0,f.e8)("prehash",t.prehash)}const{Ph:H,aT:P}=f,k={Err:class extends Error{constructor(t=""){super(t)}},_tlv:{encode:(t,e)=>{const{Err:n}=k;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(1&e.length)throw new n("tlv.encode: unpadded data");const r=e.length/2,o=f.zW(r);if(o.length/2&128)throw new n("tlv.encode: long form length too big");const i=r>127?f.zW(o.length/2|128):"";return`${f.zW(t)}${i}${o}${e}`},decode(t,e){const{Err:n}=k;let r=0;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(e.length<2||e[r++]!==t)throw new n("tlv.decode: wrong tlv");const o=e[r++];let i=0;if(!!(128&o)){const t=127&o;if(!t)throw new n("tlv.decode(long): indefinite length not supported");if(t>4)throw new n("tlv.decode(long): byte length is too big");const s=e.subarray(r,r+t);if(s.length!==t)throw new n("tlv.decode: length bytes not complete");if(0===s[0])throw new n("tlv.decode(long): zero leftmost byte");for(const t of s)i=i<<8|t;if(r+=t,i<128)throw new n("tlv.decode(long): not minimal encoding")}else i=o;const s=e.subarray(r,r+i);if(s.length!==i)throw new n("tlv.decode: wrong value length");return{v:s,l:e.subarray(r+i)}}},_int:{encode(t){const{Err:e}=k;if(t<L)throw new e("integer: negative integers are not allowed");let n=f.zW(t);if(8&Number.parseInt(n[0],16)&&(n="00"+n),1&n.length)throw new e("unexpected assertion");return n},decode(t){const{Err:e}=k;if(128&t[0])throw new e("Invalid signature integer: negative");if(0===t[0]&&!(128&t[1]))throw new e("Invalid signature integer: unnecessary leading zero");return H(t)}},toSig(t){const{Err:e,_int:n,_tlv:r}=k,o="string"==typeof t?P(t):t;f.DO(o);const{v:i,l:s}=r.decode(48,o);if(s.length)throw new e("Invalid signature: left bytes after parsing");const{v:a,l:u}=r.decode(2,i),{v:c,l}=r.decode(2,u);if(l.length)throw new e("Invalid signature: left bytes after parsing");return{r:n.decode(a),s:n.decode(c)}},hexFromSig(t){const{_tlv:e,_int:n}=k,r=`${e.encode(2,n.encode(t.r))}${e.encode(2,n.encode(t.s))}`;return e.encode(48,r)}},L=BigInt(0),Z=BigInt(1),T=(BigInt(2),BigInt(3));BigInt(4);function j(t){const e=function(t){const e=z(t);f.Q5(e,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});const{endo:n,Fp:r,a:o}=e;if(n){if(!r.eql(o,r.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if("object"!=typeof n||"bigint"!=typeof n.beta||"function"!=typeof n.splitScalar)throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...e})}(t),{Fp:n}=e,r=S(e.n,e.nBitLength),o=e.toBytes||((t,e,r)=>{const o=e.toAffine();return f.Id(Uint8Array.from([4]),n.toBytes(o.x),n.toBytes(o.y))}),i=e.fromBytes||(t=>{const e=t.subarray(1);return{x:n.fromBytes(e.subarray(0,n.BYTES)),y:n.fromBytes(e.subarray(n.BYTES,2*n.BYTES))}});function s(t){const{a:r,b:o}=e,i=n.sqr(t),s=n.mul(i,t);return n.add(n.add(s,n.mul(t,r)),o)}if(!n.eql(n.sqr(e.Gy),s(e.Gx)))throw new Error("bad generator point: equation left != right");function a(t){const{allowedPrivateKeyLengths:n,nByteLength:r,wrapPrivateKey:o,n:i}=e;if(n&&"bigint"!=typeof t){if(f.aY(t)&&(t=f.My(t)),"string"!=typeof t||!n.includes(t.length))throw new Error("Invalid key");t=t.padStart(2*r,"0")}let s;try{s="bigint"==typeof t?t:f.Ph((0,f.qj)("private key",t,r))}catch(e){throw new Error(`private key must be ${r} bytes, hex or bigint, not ${typeof t}`)}return o&&(s=p(s,i)),f.aK("private key",s,Z,i),s}function u(t){if(!(t instanceof d))throw new Error("ProjectivePoint expected")}const c=(0,f.x)(((t,e)=>{const{px:r,py:o,pz:i}=t;if(n.eql(i,n.ONE))return{x:r,y:o};const s=t.is0();null==e&&(e=s?n.ONE:n.inv(i));const a=n.mul(r,e),f=n.mul(o,e),u=n.mul(i,e);if(s)return{x:n.ZERO,y:n.ZERO};if(!n.eql(u,n.ONE))throw new Error("invZ was invalid");return{x:a,y:f}})),l=(0,f.x)((t=>{if(t.is0()){if(e.allowInfinityPoint&&!n.is0(t.py))return;throw new Error("bad point: ZERO")}const{x:r,y:o}=t.toAffine();if(!n.isValid(r)||!n.isValid(o))throw new Error("bad point: x or y not FE");const i=n.sqr(o),a=s(r);if(!n.eql(i,a))throw new Error("bad point: equation left != right");if(!t.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0}));class d{constructor(t,e,r){if(this.px=t,this.py=e,this.pz=r,null==t||!n.isValid(t))throw new Error("x required");if(null==e||!n.isValid(e))throw new Error("y required");if(null==r||!n.isValid(r))throw new Error("z required");Object.freeze(this)}static fromAffine(t){const{x:e,y:r}=t||{};if(!t||!n.isValid(e)||!n.isValid(r))throw new Error("invalid affine point");if(t instanceof d)throw new Error("projective point not allowed");const o=t=>n.eql(t,n.ZERO);return o(e)&&o(r)?d.ZERO:new d(e,r,n.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(t){const e=n.invertBatch(t.map((t=>t.pz)));return t.map(((t,n)=>t.toAffine(e[n]))).map(d.fromAffine)}static fromHex(t){const e=d.fromAffine(i((0,f.qj)("pointHex",t)));return e.assertValidity(),e}static fromPrivateKey(t){return d.BASE.multiply(a(t))}static msm(t,e){return function(t,e,n,r){if(!Array.isArray(n)||!Array.isArray(r)||r.length!==n.length)throw new Error("arrays of points and scalars must have equal length");r.forEach(((t,n)=>{if(!e.isValid(t))throw new Error(`wrong scalar at index ${n}`)})),n.forEach(((e,n)=>{if(!(e instanceof t))throw new Error(`wrong point at index ${n}`)}));const o=(0,f.dJ)(BigInt(n.length)),i=o>12?o-3:o>4?o-2:o?2:1,s=(1<<i)-1,a=new Array(s+1).fill(t.ZERO),u=Math.floor((e.BITS-1)/i)*i;let c=t.ZERO;for(let e=u;e>=0;e-=i){a.fill(t.ZERO);for(let t=0;t<r.length;t++){const o=r[t],i=Number(o>>BigInt(e)&BigInt(s));a[i]=a[i].add(n[t])}let o=t.ZERO;for(let e=a.length-1,n=t.ZERO;e>0;e--)n=n.add(a[e]),o=o.add(n);if(c=c.add(o),0!==e)for(let t=0;t<i;t++)c=c.double()}return c}(d,r,t,e)}_setWindowSize(t){w.setWindowSize(this,t)}assertValidity(){l(this)}hasEvenY(){const{y:t}=this.toAffine();if(n.isOdd)return!n.isOdd(t);throw new Error("Field doesn't support isOdd")}equals(t){u(t);const{px:e,py:r,pz:o}=this,{px:i,py:s,pz:a}=t,f=n.eql(n.mul(e,a),n.mul(i,o)),c=n.eql(n.mul(r,a),n.mul(s,o));return f&&c}negate(){return new d(this.px,n.neg(this.py),this.pz)}double(){const{a:t,b:r}=e,o=n.mul(r,T),{px:i,py:s,pz:a}=this;let f=n.ZERO,u=n.ZERO,c=n.ZERO,l=n.mul(i,i),h=n.mul(s,s),w=n.mul(a,a),g=n.mul(i,s);return g=n.add(g,g),c=n.mul(i,a),c=n.add(c,c),f=n.mul(t,c),u=n.mul(o,w),u=n.add(f,u),f=n.sub(h,u),u=n.add(h,u),u=n.mul(f,u),f=n.mul(g,f),c=n.mul(o,c),w=n.mul(t,w),g=n.sub(l,w),g=n.mul(t,g),g=n.add(g,c),c=n.add(l,l),l=n.add(c,l),l=n.add(l,w),l=n.mul(l,g),u=n.add(u,l),w=n.mul(s,a),w=n.add(w,w),l=n.mul(w,g),f=n.sub(f,l),c=n.mul(w,h),c=n.add(c,c),c=n.add(c,c),new d(f,u,c)}add(t){u(t);const{px:r,py:o,pz:i}=this,{px:s,py:a,pz:f}=t;let c=n.ZERO,l=n.ZERO,h=n.ZERO;const w=e.a,g=n.mul(e.b,T);let p=n.mul(r,s),y=n.mul(o,a),m=n.mul(i,f),E=n.add(r,o),b=n.add(s,a);E=n.mul(E,b),b=n.add(p,y),E=n.sub(E,b),b=n.add(r,i);let B=n.add(s,f);return b=n.mul(b,B),B=n.add(p,m),b=n.sub(b,B),B=n.add(o,i),c=n.add(a,f),B=n.mul(B,c),c=n.add(y,m),B=n.sub(B,c),h=n.mul(w,b),c=n.mul(g,m),h=n.add(c,h),c=n.sub(y,h),h=n.add(y,h),l=n.mul(c,h),y=n.add(p,p),y=n.add(y,p),m=n.mul(w,m),b=n.mul(g,b),y=n.add(y,m),m=n.sub(p,m),m=n.mul(w,m),b=n.add(b,m),p=n.mul(y,b),l=n.add(l,p),p=n.mul(B,b),c=n.mul(E,c),c=n.sub(c,p),p=n.mul(E,y),h=n.mul(B,h),h=n.add(h,p),new d(c,l,h)}subtract(t){return this.add(t.negate())}is0(){return this.equals(d.ZERO)}wNAF(t){return w.wNAFCached(this,t,d.normalizeZ)}multiplyUnsafe(t){f.aK("scalar",t,L,e.n);const r=d.ZERO;if(t===L)return r;if(t===Z)return this;const{endo:o}=e;if(!o)return w.unsafeLadder(this,t);let{k1neg:i,k1:s,k2neg:a,k2:u}=o.splitScalar(t),c=r,l=r,h=this;for(;s>L||u>L;)s&Z&&(c=c.add(h)),u&Z&&(l=l.add(h)),h=h.double(),s>>=Z,u>>=Z;return i&&(c=c.negate()),a&&(l=l.negate()),l=new d(n.mul(l.px,o.beta),l.py,l.pz),c.add(l)}multiply(t){const{endo:r,n:o}=e;let i,s;if(f.aK("scalar",t,Z,o),r){const{k1neg:e,k1:o,k2neg:a,k2:f}=r.splitScalar(t);let{p:u,f:c}=this.wNAF(o),{p:l,f:h}=this.wNAF(f);u=w.constTimeNegate(e,u),l=w.constTimeNegate(a,l),l=new d(n.mul(l.px,r.beta),l.py,l.pz),i=u.add(l),s=c.add(h)}else{const{p:e,f:n}=this.wNAF(t);i=e,s=n}return d.normalizeZ([i,s])[0]}multiplyAndAddUnsafe(t,e,n){const r=d.BASE,o=(t,e)=>e!==L&&e!==Z&&t.equals(r)?t.multiply(e):t.multiplyUnsafe(e),i=o(this,e).add(o(t,n));return i.is0()?void 0:i}toAffine(t){return c(this,t)}isTorsionFree(){const{h:t,isTorsionFree:n}=e;if(t===Z)return!0;if(n)return n(d,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){const{h:t,clearCofactor:n}=e;return t===Z?this:n?n(d,this):this.multiplyUnsafe(e.h)}toRawBytes(t=!0){return(0,f.e8)("isCompressed",t),this.assertValidity(),o(d,this,t)}toHex(t=!0){return(0,f.e8)("isCompressed",t),f.My(this.toRawBytes(t))}}d.BASE=new d(e.Gx,e.Gy,n.ONE),d.ZERO=new d(n.ZERO,n.ONE,n.ZERO);const h=e.nBitLength,w=function(t,e){const n=(t,e)=>{const n=e.negate();return t?n:e},r=t=>{if(!Number.isSafeInteger(t)||t<=0||t>e)throw new Error(`Wrong window size=${t}, should be [1..${e}]`)},o=t=>(r(t),{windows:Math.ceil(e/t)+1,windowSize:2**(t-1)});return{constTimeNegate:n,unsafeLadder(e,n){let r=t.ZERO,o=e;for(;n>q;)n&O&&(r=r.add(o)),o=o.double(),n>>=O;return r},precomputeWindow(t,e){const{windows:n,windowSize:r}=o(e),i=[];let s=t,a=s;for(let t=0;t<n;t++){a=s,i.push(a);for(let t=1;t<r;t++)a=a.add(s),i.push(a);s=a.double()}return i},wNAF(e,r,i){const{windows:s,windowSize:a}=o(e);let f=t.ZERO,u=t.BASE;const c=BigInt(2**e-1),l=2**e,d=BigInt(e);for(let t=0;t<s;t++){const e=t*a;let o=Number(i&c);i>>=d,o>a&&(o-=l,i+=O);const s=e,h=e+Math.abs(o)-1,w=t%2!=0,g=o<0;0===o?u=u.add(n(w,r[s])):f=f.add(n(g,r[h]))}return{p:f,f:u}},wNAFCached(t,e,n){const r=A.get(t)||1;let o=R.get(t);return o||(o=this.precomputeWindow(t,r),1!==r&&R.set(t,n(o))),this.wNAF(r,o,e)},setWindowSize(t,e){r(e),A.set(t,e),R.delete(t)}}}(d,e.endo?Math.ceil(h/2):h);return{CURVE:e,ProjectivePoint:d,normPrivateKeyToScalar:a,weierstrassEquation:s,isWithinCurveOrder:function(t){return f.r4(t,Z,e.n)}}}function F(t){const e=function(t){const e=z(t);return f.Q5(e,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...e})}(t),{Fp:n,n:r}=e,o=n.BYTES+1,i=2*n.BYTES+1;function s(t){return p(t,r)}function a(t){return E(t,r)}const{ProjectivePoint:u,normPrivateKeyToScalar:l,weierstrassEquation:d,isWithinCurveOrder:h}=j({...e,toBytes(t,e,r){const o=e.toAffine(),i=n.toBytes(o.x),s=f.Id;return(0,f.e8)("isCompressed",r),r?s(Uint8Array.from([e.hasEvenY()?2:3]),i):s(Uint8Array.from([4]),i,n.toBytes(o.y))},fromBytes(t){const e=t.length,r=t[0],s=t.subarray(1);if(e!==o||2!==r&&3!==r){if(e===i&&4===r){return{x:n.fromBytes(s.subarray(0,n.BYTES)),y:n.fromBytes(s.subarray(n.BYTES,2*n.BYTES))}}throw new Error(`Point of length ${e} was invalid. Expected ${o} compressed bytes or ${i} uncompressed bytes`)}{const t=f.Ph(s);if(!f.r4(t,Z,n.ORDER))throw new Error("Point is not on curve");const e=d(t);let o;try{o=n.sqrt(e)}catch(t){const e=t instanceof Error?": "+t.message:"";throw new Error("Point is not on curve"+e)}return!(1&~r)!==((o&Z)===Z)&&(o=n.neg(o)),{x:t,y:o}}}}),w=t=>f.My(f.lq(t,e.nByteLength));function g(t){return t>r>>Z}const y=(t,e,n)=>f.Ph(t.slice(e,n));class m{constructor(t,e,n){this.r=t,this.s=e,this.recovery=n,this.assertValidity()}static fromCompact(t){const n=e.nByteLength;return t=(0,f.qj)("compactSignature",t,2*n),new m(y(t,0,n),y(t,n,2*n))}static fromDER(t){const{r:e,s:n}=k.toSig((0,f.qj)("DER",t));return new m(e,n)}assertValidity(){f.aK("r",this.r,Z,r),f.aK("s",this.s,Z,r)}addRecoveryBit(t){return new m(this.r,this.s,t)}recoverPublicKey(t){const{r,s:o,recovery:i}=this,c=S((0,f.qj)("msgHash",t));if(null==i||![0,1,2,3].includes(i))throw new Error("recovery id invalid");const l=2===i||3===i?r+e.n:r;if(l>=n.ORDER)throw new Error("recovery id 2 or 3 invalid");const d=1&i?"03":"02",h=u.fromHex(d+w(l)),g=a(l),p=s(-c*g),y=s(o*g),m=u.BASE.multiplyAndAddUnsafe(h,p,y);if(!m)throw new Error("point at infinify");return m.assertValidity(),m}hasHighS(){return g(this.s)}normalizeS(){return this.hasHighS()?new m(this.r,s(-this.s),this.recovery):this}toDERRawBytes(){return f.aT(this.toDERHex())}toDERHex(){return k.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return f.aT(this.toCompactHex())}toCompactHex(){return w(this.r)+w(this.s)}}const b={isValidPrivateKey(t){try{return l(t),!0}catch(t){return!1}},normPrivateKeyToScalar:l,randomPrivateKey:()=>{const t=I(e.n);return function(t,e,n=!1){const r=t.length,o=x(e),i=I(e);if(r<16||r<i||r>1024)throw new Error(`expected ${i}-1024 bytes of input, got ${r}`);const s=p(n?(0,f.Ph)(t):(0,f.lX)(t),e-c)+c;return n?(0,f.z)(s,o):(0,f.lq)(s,o)}(e.randomBytes(t),e.n)},precompute:(t=8,e=u.BASE)=>(e._setWindowSize(t),e.multiply(BigInt(3)),e)};function B(t){const e=f.aY(t),n="string"==typeof t,r=(e||n)&&t.length;return e?r===o||r===i:n?r===2*o||r===2*i:t instanceof u}const v=e.bits2int||function(t){const n=f.Ph(t),r=8*t.length-e.nBitLength;return r>0?n>>BigInt(r):n},S=e.bits2int_modN||function(t){return s(v(t))},q=f.OG(e.nBitLength);function O(t){return f.aK(`num < 2^${e.nBitLength}`,t,L,q),f.lq(t,e.nByteLength)}function R(t,r,o=A){if(["recovered","canonical"].some((t=>t in o)))throw new Error("sign() legacy options not supported");const{hash:i,randomBytes:c}=e;let{lowS:d,prehash:w,extraEntropy:p}=o;null==d&&(d=!0),t=(0,f.qj)("msgHash",t),N(o),w&&(t=(0,f.qj)("prehashed msgHash",i(t)));const y=S(t),E=l(r),b=[O(E),O(y)];if(null!=p&&!1!==p){const t=!0===p?c(n.BYTES):p;b.push((0,f.qj)("extraEntropy",t))}const B=f.Id(...b),x=y;return{seed:B,k2sig:function(t){const e=v(t);if(!h(e))return;const n=a(e),r=u.BASE.multiply(e).toAffine(),o=s(r.x);if(o===L)return;const i=s(n*s(x+o*E));if(i===L)return;let f=(r.x===o?0:2)|Number(r.y&Z),c=i;return d&&g(i)&&(c=function(t){return g(t)?s(-t):t}(i),f^=1),new m(o,c,f)}}}const A={lowS:e.lowS,prehash:!1},H={lowS:e.lowS,prehash:!1};return u.BASE._setWindowSize(8),{CURVE:e,getPublicKey:function(t,e=!0){return u.fromPrivateKey(t).toRawBytes(e)},getSharedSecret:function(t,e,n=!0){if(B(t))throw new Error("first arg must be private key");if(!B(e))throw new Error("second arg must be public key");return u.fromHex(e).multiply(l(t)).toRawBytes(n)},sign:function(t,n,r=A){const{seed:o,k2sig:i}=R(t,n,r),s=e;return f.fg(s.hash.outputLen,s.nByteLength,s.hmac)(o,i)},verify:function(t,n,r,o=H){const i=t;if(n=(0,f.qj)("msgHash",n),r=(0,f.qj)("publicKey",r),"strict"in o)throw new Error("options.strict was renamed to lowS");N(o);const{lowS:c,prehash:l}=o;let d,h;try{if("string"==typeof i||f.aY(i))try{d=m.fromDER(i)}catch(t){if(!(t instanceof k.Err))throw t;d=m.fromCompact(i)}else{if("object"!=typeof i||"bigint"!=typeof i.r||"bigint"!=typeof i.s)throw new Error("PARSE");{const{r:t,s:e}=i;d=new m(t,e)}}h=u.fromHex(r)}catch(t){if("PARSE"===t.message)throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(c&&d.hasHighS())return!1;l&&(n=e.hash(n));const{r:w,s:g}=d,p=S(n),y=a(g),E=s(p*y),b=s(w*y),B=u.BASE.multiplyAndAddUnsafe(h,E,b)?.toAffine();return!!B&&s(B.x)===w},ProjectivePoint:u,Signature:m,utils:b}}function C(t){return{hash:t,hmac:(e,...n)=>a(t,e,(0,i.Id)(...n)),randomBytes:i.po}}const K=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),$=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),V=BigInt(1),W=BigInt(2),Y=(t,e)=>(t+e/W)/e;function M(t){const e=K,n=BigInt(3),r=BigInt(6),o=BigInt(11),i=BigInt(22),s=BigInt(23),a=BigInt(44),f=BigInt(88),u=t*t*t%e,c=u*u*t%e,l=m(c,n,e)*c%e,d=m(l,n,e)*c%e,h=m(d,W,e)*u%e,w=m(h,o,e)*h%e,g=m(w,i,e)*w%e,p=m(g,a,e)*g%e,y=m(p,f,e)*p%e,E=m(y,a,e)*g%e,b=m(E,n,e)*c%e,B=m(b,s,e)*w%e,v=m(B,r,e)*u%e,S=m(v,W,e);if(!U.eql(U.sqr(S),t))throw new Error("Cannot find square root");return S}const U=S(K,void 0,void 0,{sqrt:M}),_=function(t,e){const n=e=>F({...t,...C(e)});return Object.freeze({...n(e),create:n})}({a:BigInt(0),b:BigInt(7),Fp:U,n:$,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:t=>{const e=$,n=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),r=-V*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),o=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=n,s=BigInt("0x100000000000000000000000000000000"),a=Y(i*t,e),f=Y(-r*t,e);let u=p(t-a*n-f*o,e),c=p(-a*r-f*i,e);const l=u>s,d=c>s;if(l&&(u=e-u),d&&(c=e-c),u>s||c>s)throw new Error("splitScalar: Endomorphism failed, k="+t);return{k1neg:l,k1:u,k2neg:d,k2:c}}}},r.sc);BigInt(0);_.ProjectivePoint}}]);